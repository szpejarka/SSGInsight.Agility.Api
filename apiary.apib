FORMAT: 1A

# SSGInsight.Agility.Api

This is the API for Agility. The initial release will only be consumed by one application - the new iOS application.

- Use spinal case for routes (`/this-is-a-spinal-url`) 
- GET requests retrieve data
- POST requests mutate data
- Always suffix the URL with a verb (e.g. `/products/list`)
- Don't envelope data - user headers for metadata (e.g. `X-Paging-PageCount: 1`)
- Each request to the API should include the user's device id in the header (e.g. `X-Device-Id: 02:00:00:00:00:00`)
- Each request to the API should include the user's agility base uri in the header (e.g.  `X-Agility-BaseUri: https://uat.ssginsight.com/agility802`)

# Group Metadata

## List language translations [/language/:languageId/translations/list]

### /language/:languageId/translations/list [GET]

+ Response 200 (application/json)

        [
            {
                "id": "page_context_field",
                "text": "Naciśnij tutaj"
            },
            {
                "id": "page_context_field",
                "text": "Naciśnij tutaj"
            }
        ]

## Get the client-id [/identity/client-id/find]

- Used by mobile app to satisfy IDServer code grant type (authorisation code flow).

### /identity/client-id/find [GET]

+ Request (application/json)

+ Response 200

        {
            "id": "123"
        }

## Find the system configuration metadata [/system-configuration/find]

### /system-configuration/find [GET]

+ Response 200 (application/json)

        {
            "costCodesMandatory": true,
            "costCodesMandatoryOnMovements" : true,
            "faultTypesMandatory": true,
            "routeSheetsMandatory": true,
            "attachmentsWhiteList": [ "JPG", "PNG" ],
            "useCompletionForm": false,
            "permissions":
            {
                "useJobTimeConfirmation": false
            },
            "assignedJobs":
            {
                "scheduledDate":
                {
                    "on" : true
                },
                "startDate":
                {
                    "on" : true
                }
            },
            "availableJobs":
            {
                "startDate":
                {
                    "on" : true
                }
            }
        }
        
## List the crafts [/crafts/list]

### /crafts/list [GET]

+ Response 200 (application/json)

        [
            {
                "description": "Air Conditioning Engineer",
                "id": "123"
            }
        ]

## List the job types [/job-types/list]

### /job-types/list [GET]

+ Response 200 (application/json)

        [
            {
                "description": "Breakdown Repair",
                "id": "123",
                "sound": {
                     "id": "123",
                     "notificationReference": "agility-sound-123.wav",
                     "checksum": "12345",
                     "url": "https://agility.api/api/blobs/123/find"
                }
            }
        ]

## List the priorities [/priorities/list]

### /priorities/list [GET]

+ Response 200 (application/json)

        [
            {
                "description": "6 Hours",
                "id": "789",
                "sortOrder": 2
            }
        ]

## List the cost codes [/cost-codes/list]

### /cost-codes/list [GET]

+ Response 200 (application/json)

        [
            {
                "description": "overhead",
                "id": "123"
            }
        ]

## List the fault groups [/fault-groups/list]

An empty list will be returned if `FaultCodeVisibility` is false.

### /fault-groups/list [GET]

+ Response 200 (application/json)

        [
            {
                "description": "Electrical",
                "id": "789",
                "faultCodes": [
                    {
                        "description": "Fuse 10 amp blown",
                        "id": "012"
                    },
                    {
                        "description": "Fuse 30 amp blown",
                        "id": "345"
                    }
                ]
            }
        ]

## List the completion types [/completion-types/list]

### /completion-types/list [GET]

+ Response 200 (application/json)

        [
            {
                "description": "Customer cancelled",
                "id": "123"
            }
        ]

## List the job statuses [/job-statuses/list]

### /job-statuses/list [GET]

+ Response 200 (application/json)

        [
            {
                "description": "Job Accepted by Engineer",
                "id": "123",
                "isAnActiveStatus": false,
                "allowTransfer": false,
                "measurement":
                    {
                        "labourTime" : false
                    },
                "followingStatuses": [
                    {
                        "description": "Rejected",
                        "id": "456",
                        "isAnActiveStatus": false,
                        "allowTransfer": false,
                    }
                ]
            },
            {
                "description": "Rejected",
                "id": "456",
                "isAnActiveStatus": false,
                "allowTransfer": false,
                "followingStatuses": []
            }
        ]

## List the available job statuses [/available-job-statuses/list]

### /available-job-statuses/list [GET]

+ Response 200 (application/json)

        [
            {
                "description": "Open",
                "id": "123"
            },
            {
                "description": "Awaiting",
                "id": "456",
            }
        ]

## List the asset statuses [/asset-statuses/list]

### /asset-statuses/list [GET]

+ Response 200 (application/json)

        [
            {
                "id": "A12",
                "name": "Working"
            },
            {
                "id": "STP",
                "name": "Stopped"
                
            }
        ]

## List the eqiupment groups [/equipment-groups/list]

### /equipment-groups/list [GET]

+ Response 200 (application/json)

        [
            {
                "id": "eqA12",
                "name": "Tools"
            },
            {
                "id": "PL1",
                "name": "Medium Plants"
                
            }
        ]
        

## Find the scheduled status [/job-statuses/scheduled/find]

### /job-statuses/scheduled/find [GET]

+ Response 200 (application/json)

        {
            "description": "Scheduled",
            "id": "123"
        }

## Find the accepted status [/job-statuses/accepted/find]

### /job-statuses/accepted/find [GET]

+ Response 200 (application/json)

        {
            "description": "Accepted",
            "id": "123"
        }

## Find the rejected status [/job-statuses/rejected/find]

### /job-statuses/rejected/find [GET]

+ Response 200 (application/json)

        {
            "description": "Rejected",
            "id": "123"
        }

## Find the suspended status [/job-statuses/suspended/find]

### /job-statuses/suspended/find [GET]

+ Response 200 (application/json)

        {
            "description": "Suspended",
            "id": "123"
        }

## Find the completed status [/job-statuses/completed/find]

### /job-statuses/completed/find [GET]

+ Response 200 (application/json)

        {
            "description": "Completed",
            "id": "123"
        }
        
## Find the cancelled status [/job-statuses/cancelled/find]

### /job-statuses/cancelled/find [GET]

+ Response 200 (application/json)

        {
            "description": "Cancelled",
            "id": "123"
        }

# Group Authenticated User

## Find the user [/user/find]

### /user/find [GET]

+ `isContractor` : false - Internal Labour
+ `isContractor` : true - External Labour
+ `coworkerManualTimeSpent` : controlled by Agility system/user parameter AgilityMobile \ Features \ CoworkerManualTimespent or false for contractors
- 
    
+ Response 200 (application/json)

        {
            "avatar": {
                "url": "https://uat.ssginsight.com/avatars/bartekCossack.gif"
            },
            "emailAddress": "bartek.Cossack@ssginsight.co.uk",
            "name": "Bartek Cossack",
            "id": "123",
            "username": "bartekCossack",
            "isContractor" : true,
            "language" : {
                "id": "123"
            },
            "features": {
                "coworkerManualTimeSpent": true
            }
        }
        
## Find the user configuration [/user/configuration/find]

### /user/configuration/find [GET]

+ assignedJobs.sortBy: `ResponseDate` `StartDate` `DueDate` `ScheduledDate` `Priority` `JobId` `Status` `Description` `Asset` `JobType` `Location`

+ sortDirection: `Ascending`, `Descending`

+ assetDisplay: `Name` `Code` `NameAndCode`

+ Request (application/json)

+ Response 200 (application/json)

        {
            "assetDisplay": "Name",
            "assignedJobs":{
                "sortOrder":{
                    "sortBy":"DueDate",
                    "sortDirection":"Descending"
                }
            },
            "availableJobs":{
                "enabled":true,
                "keywordSearch":true,
                "barcodeReader":true,
                "filters":true
            },
            "issueReturn":{
                "enabled":true,
                "barcodeReader":true,
                "forJob": {
                    "enabled": true;
                },
                "forEmployee": {
                    "enabled": true;
                },
                "forCostCode": {
                    "enabled": true;
                },
                "forAsset": {
                    "enabled": true;
                }                
            },
            "addTimeManually":{
                "enabled": false
            },
            "sendCoworkerRequest":{
                "enabled":true
            },
            "searchAssets":{
                "enabled":true,
                "barcodeReader":true
            },
            "createJob":{
                "enabled":true,
                "standardJob":{
                    "enabled":true
                }
            },
            "createRequest":{
                "enabled":true
            },
            "addFollowOnJob":{
                "enabled": true,
                "standardJob":{
                    "enabled":true
                }
            },
            "ammendAsset":{
                "enabled":true
            },
            "jobCard":
            {
                "taskCode":
                {
                    "enabled" : true
                }
            },
            "availableJobCard":
            {
                "taskCode":
                {
                    "enabled" : true
                }
            }
        }

# Group User Device Id
        
## Update the user's PDA ID [/user/device-id/update]

### /user/device-id/update [POST]

+ Request (application/json)

        {
            "deviceId": "02:00:00:00:00:00",
            "platform": "apns|gcm"
        }

+ Response 204

## Clear the user's PDA ID [/user/device-id/clear]

### /user/device-id/clear [POST]

+ Request (application/json)

        {
            "id": "123"
        }
        

+ Response 204

# Group User Requests

## List the user's requests [/user/requests/list]

### /user/requests/list [GET]

#### Deprecated response properties:
- `callerName`

+ Request (application/json)

+ Response 200 (application/json)

        [
            {
                "id": "123",
                "requestor": {
                    "id": "qwe12",
                    "name": "Albert Einstain"
                },
                "requestComments": "",

                "active": false,
                "completionComments":"",
                "completionTargetDate": "2018-06-15T10:00:00",
                "completionWarningDate": "2018-06-15T10:00:00",
                "costCode": "",
                "hasBeenRespondedTo": true,
                "jobCode": "",
                "jobType": "",
                "location": {
                    "location": {
                        "id": "123",
                        "code": "",
                        "description": ""
                    },
                    "site": {
                        "id": "123",
                        "code": "",
                        "description": ""
                    },
                    "subLocation": {
                        "id": "123",
                        "code": "",
                        "description": ""
                    }
                },
                "asset": {
                    "id": "123",
                    "code": "",
                    "description": ""
                },
                "priority": "",
                "responseTargetDate": "2018-06-15T10:00:00",
                "responseWarningDate": "2018-06-15T10:00:00",
                "scheduleStartDate": "2018-06-15T10:00:00",
                "startDate": "2018-06-15T10:00:00",
                "status": {
                    "description": "Accepted",
                    "id": "456"
                },
                "taskDescription": "",
                "task": {
                  "id": "123",
                  "code": "task01",
                  "description": "desc"
                },
                "workOrderDescription": "",
                "checklists" : [
                   {
                        "id" : "123",
                       "description" : "abc"
                   }
                ],
                "hasRouteSheet" : true,
                "callerName": "Name",
                "caller": {
                  "name": "John Doe",
                  "phone": "+48 12345678",
                  "email": "john.doe@ssginsight.com"
                }
            }
        ]

## Accept request for a coworker [/user/requests/{requestId}/accept]

### /user/requests/{requestId}/accept [POST]

+ `createDate` date when request was created

+ Request (application/json)

        {
            "createDate" : "2018-06-15T10:00:00"
        }

+ Response 204

## Reject request for a coworker [/user/requests/{requestId}/reject]

### /user/requests/{requestId}/reject [POST]

+ `createDate` date when request was created

+ Request (application/json)

        {
            "createDate" : "2018-06-15T10:00:00"
        }

+ Response 204

# Group User Assigned Jobs

## List the user's assigned jobs [/user/assigned-jobs/list]

### /user/assigned-jobs/list [GET]

#### Deprecated response properties:
- `callerName`
- `taskDescription`

+ checklists.status : `Incomplete` `Saved` `Completed`

+ Request (application/json)

+ Response 200 (application/json)

        [
            {
                "active": false,
                "completionComments": "",
                "completionTargetDate": "2018-06-15T10:00:00",
                "completionWarningDate": "2018-06-15T10:00:00",
                "costCode": "",
                "hasBeenRespondedTo": true,
                "id": "123",
                "jobId": "234",
                "jobCode": "",
                "jobType": "",
                "location": {
                    "location": {
                        "id": "123",
                        "code": "",
                        "description": ""
                    },
                    "site": {
                        "id": "123",
                        "code": "",
                        "description": ""
                    },
                    "subLocation": {
                        "id": "123",
                        "code": "",
                        "description": ""
                    }
                },
                "asset": {
                    "id": "123",
                    "code": "",
                    "description": ""
                },
                "priority": "",
                "priorityData": {
                    "id": "ref-231412",
                    "description": "Urgent"
                },
                "craft": {
                    "id": "123",
                    "description": "Air Conditioning Engineer"
                },
                "responseTargetDate": "2018-06-15T10:00:00",
                "responseWarningDate": "2018-06-15T10:00:00",
                "scheduleStartDate": "2018-06-15T10:00:00",
                "startDate": "2018-06-15T10:00:00",
                "status": {
                    "description": "Accepted",
                    "id": "456"
                },
                "statusChangeDate": "2018-06-15T10:00:00",
                "taskDescription": "",
                "task": {
                    "id": "123",
                    "code": "task01",
                    "description": "desc"
                },
                "workOrderDescription": "",
                "checklists" : [
                   {
                        "id" : "123",
                       "description" : "abc",
                       "status": "Incomplete | Saved | Completed",
                       "mandatory": false
                   }
                ],
                "hasRouteSheet" : true,
                "callerName": "Name",
                "caller": {
                    "name": "John Doe",
                    "phone": "+48 12345678",
                    "email": "john.doe@ssginsight.com"
                },
                "hasHazards" : false
            }
        ]

+ Request V1 (application/json)

    + Headers
            
            Acccept: application/vnd.agility.api.v1+json;

+ Response 200 (application/vnd.agility.api.v1+json)
    
        [
            {
                "active": false,
                "completionTargetDate": "2018-06-15T10:00:00",
                "completionWarningDate": "2018-06-15T10:00:00",
                "costCode": "",
                "hasBeenRespondedTo": true,
                "id": "123",
                "jobCode": "",
                "jobType": "",
                "location": {
                    "location": "",
                    "site": "",
                    "subLocation": ""
                },
                "asset": {
                    "code": "",
                    "description": ""
                },
                "priority": "",
                "responseTargetDate": "2018-06-15T10:00:00",
                "responseWarningDate": "2018-06-15T10:00:00",
                "scheduleStartDate": "2018-06-15T10:00:00",
                "startDate": "2018-06-15T10:00:00",
                "status": {
                    "description": "Accepted",
                    "id": "456"
                },
                "taskDescription": "",
                "workOrderDescription": "",
                "checklists" : [
                   {
                        "id" : "123",
                       "description" : "abc"
                   }
                ],
                "hasRouteSheet" : true
            }
        ]
        
## Accept a job assigned to the user [/user/assigned-jobs/:jobId/accept]

### /user/assigned-jobs/:jobId/accept [POST]

+ `actionDateTime` (optional)...

+ Request (application/json)

        {
            "actionDateTime": "2018-06-15T10:00:00"
        }

+ Response 204

## Reject a job assigned to the the user [/user/assigned-jobs/:jobId/reject]

### /user/assigned-jobs/:jobId/reject [POST]

+ `actionDateTime` (optional)...

+ Request (application/json)

        {
            "actionDateTime": "2018-06-15T10:00:00"
        }

+ Response 204

## Complete a job assigned to the the user [/user/assigned-jobs/:jobId/complete]

### /user/assigned-jobs/:jobId/complete [POST]
Request:
+ adjustOnGoingTime : request to adjust ongoing time during complete, can be null if not required

+ Request (application/json)

        {
            "completionComments": "some text comment",
            "completionTypeId": "123",
            "completedDate": "2018-06-15T10:00:00",
            "faultTypeId": "123",
            "adjustOngoingTime": {
                "timeSpentMinutes": 120
            }
        }

+ Response 204

## Complete a job assigned to the the user without parameters [/user/assigned-jobs/:jobId/complete-basic]

### /user/assigned-jobs/:jobId/complete-basic [POST]

+ Request (application/json)

        {
            "completedDate": "2018-06-15T10:00:00",
        }

+ Response 204

## Transfer a job assigned to the the user to other user [/user/assigned-jobs/:jobId/transfer]

### /user/assigned-jobs/:jobId/transfer [POST]
+ Request (application/json)

        {
            "user":
            {
                id: "1234"
            },
            "transferDate": "2018-06-15T10:00:00",
            "comments": "some text comment"
        }

+ Response 200 (application/json)

        {
            jobCode: "asdaq"
        }

## Amend asset on a job assigned to the user   [/user/assigned-jobs/{jobId}/asset/amend]

### /user/assigned-jobs/{jobId}/asset/amend [POST]
+ Request (application/json)

        {
            "asset": {
                "id": "assetid-1234"
            },
            "amendDate": "2018-06-15T10:00:00"
        }

+ Response 204


## Adjust time spent by user on day [/user/assigned-jobs/{jobId}/timespents/adjust]

### /user/assigned-jobs/{jobId}/timespents/adjust [POST]

+ `workStartedAt` date for which required timespent will be adjusted
+ `timeSpentMinutes` number of minutes to set for the date

+ Request (application/json)

        {
            "workStartedAt": "2018-06-15T10:00:00",
            "timeSpentMinutes" : 123
        }

+ Response 204

## List user time spents grouped by day [/user/assigned-jobs/{jobId}/timespents/list]

### /user/assigned-jobs/{jobId}/timespents/list [GET]
+ `workStartedAt` day for which time spent is aggregated
+ `timeSpentMinutes` aggregated number of minutes for day

+ Response 200 (application/json)

        [
            {
                "workStartedAt": "2018-06-15T10:01:12",
                "timeSpentMinutes": 120
            },
            {
                "workStartedAt": "2018-06-16T9:06:04",
                "timeSpentMinutes": 15
            }
        ]

#Group User Assigined Jobs / Follow On Jobs 

## Create follow on job [/user/assigned-jobs/{jobId}/follow-on-jobs/create]

### /user/assigned-jobs/{jobid}/follow-on-jobs/create [POST]

+ Parameters

    + jobId:"123" (required,string) - assigned job id

+ Request (application/json)

    + Body
    
            {
                "referenceId": "030B4A82-1B7C-11CF-9D53-00AA003C9CB6", 
                "costCodeId": "123",
                "craftId": "123",,
                "createDate": "2018-06-15T10:00:00",
                "description": "",
                "jobTypeId": "123",
                "priorityId": "123",
                "assignToSelf": false
            }

+ Response 201 (application/json)

    + Body
    
            {
                "followOnJobId": "123"
            }

#Group User Assigined Jobs / Coworker

## Add time spent by coworker on day [/user/assigned-jobs/{jobId}/coworkers/{coworkerId}/timespents/add]

### /user/assigned-jobs/{jobId}/coworkers/{coworkerId}/timespents/add [POST]

+ `workStartedAt` date for which required timespent will be add
+ `timeSpentMinutes` number of minutes

+ Request (application/json)

        {
            "workStartedAt": "2018-06-15T10:00:00",
            "timeSpentMinutes" : 123
        }

+ Response 204

## Adjust time spent by coworker on day [/user/assigned-jobs/{jobId}/coworkers/{coworkerId}/timespents/adjust]

### /user/assigned-jobs/{jobId}/coworkers/{coworkerId}/timespents/adjust [POST]

+ `workStartedAt` date for which required timespent will be adjusted
+ `timeSpentMinutes` number of minutes to set for the date

+ Request (application/json)

        {
            "workStartedAt": "2018-06-15T10:00:00",
            "timeSpentMinutes" : 123
        }

+ Response 204


## List coworkers assigned to job with time spents grouped by day [/user/assigned-jobs/:jobId/coworkers/list]

### /user/assigned-jobs/:jobId/coworkers/list [GET]
+ `workStartedAt` day for which time spent is aggregated
+ `timeSpentMinutes` aggregated number of minutes for day

+ Response 200 (application/json)

        [
            {
                "name": "Bartek Cossack",
                "id": "123",
                "timespents": 
                [
                    {
                        "workStartedAt": "2018-06-15T10:01:12",
                        "timeSpentMinutes": 120
                    },
                    {
                        "workStartedAt": "2018-06-16T9:06:04",
                        "timeSpentMinutes": 15
                    },
                ]
            },
        ]

## Get all requests for a coworker [/user/assigned-jobs/:jobId/coworker-requests/list]

### /user/assigned-jobs/{jobId}/coworker-requests/list [GET]

+ Request (application/json)

        {
            [{
            "requestId" : "123455",
            "requestorId" : "12345abc",
            "user" : {
                "id": "1234",
                "name" : "Bartek Cossak"
                },
            "createDate" :"2018-06-15T10:00:00"
            "comment" :"2018-06-15T10:00:00"
            "status" : "Created"
            }]
        }

+ Response 204

## Add request for a coworker [/user/assigned-jobs/{jobId}/coworker-requests/add]

### /user/assigned-jobs/{jobId}/coworker-requests/add [POST]

+ `createDate` date when request was created
+ `coworkerId` user for whom request is created

+ Request (application/json)

        {
            "requestId" : "030B4A82-1B7C-11CF-9D53-00AA003C9CB6"
            "createDate" : "2018-06-15T10:00:00"
            "coworkerId" : "1234"
            "comment" : "User Comment"
        }

+ Response 204

## Cancel request for a coworker [/user/assigned-jobs/{jobId}/coworker-requests/{requestId}/cancel]

### /user/assigned-jobs/{jobId}/coworker-requests/{requestId}/cancel [POST]

+ `createDate` date when request was created

+ Request (application/json)

        {
            "createDate" : "2018-06-15T10:00:00"
        }

+ Response 204

## Resend request for a coworker [/user/assigned-jobs/{jobId}/coworker-requests/{requestId}/resend]

### /user/assigned-jobs/{jobId}/coworker-requests/{requestId}/resend [POST]

+ `createDate` date when request was created

+ Request (application/json)

        {
            "createDate" : "2018-06-15T10:00:00"
        }

+ Response 204

# Group User Assigned Jobs / Attachments

## Find a job attachments [/user/assigned-jobs/:jobId/attachments/list]
        
### /user/assigned-jobs/:jobId/attachments/list [GET]

+ Response 200 (application/json)

        [
            {
                "id": "123",
                "createDate": "2018-06-15T10:00:00",
                "description": "some user description",
                "authorName": "Billy Smith",
                "authorUserId": "1234",
                "size": 12345,
                "name": "image.jpg",
                "url": "https://agility.api/api/blobs/sdfkjhweoi34/find",
                "urlIsInternal": true
            },
            {
                "id": "1212343",
                "createDate": "2018-06-15T10:00:00",
                "description": "some user description different one",
                "authorName": "Billy Smith",
                "authorUserId": "1234",
                "size": 12345,
                "name": "image.jpg",
                "url": "https://google.com/some.jpg",
                "urlIsInternal": false
            }            
        ]
        
## Create a assigned job attachment [/user/assigned-jobs/:jobid/attachments/create]
        
### /user/assigned-jobs/:jobid/attachments/create [POST]

+ Request (multipart/form-data; boundary={unique boundary text}) 

    + Body
    
            --{unique boundary text}
            Content-Disposition: form-data; name="attachmentData"
            Content-Type: application/json
            
            {
                "createDate": "2018-06-15T10:00:00",
                "description": "user text",
                "fileName": "filename.jpg"
            }
            
            --{unique boundary text}
            Content-Disposition: form-data; name="attachmentFile"
            Content-Type: image/jpeg
            Content-Transfer-Encoding: base64
            Content-Size: 1000
    
            SDFKJHWEFKJ;SDC,NSA.,VJNA;DSFJKAJKGFSDVFKDS;FGJKLHSW;GAS;DJKFHKSAJDGHKSAJDHGFKSAJDHGSAJDFKSAJDF
            --{unique boundary text}
            
+ Response 200 (application/json)

    + Body

            {
                "id": "123"
            }
            
## Find an asset attachments assigned to job [/user/assigned-jobs/:jobId/asset/attachments/list]
        
### /user/assigned-jobs/:jobId/asset/attachments/list [GET]

+ Request V1 (application/json)

    + Headers
            
            Acccept: application/vnd.agility.api.v1+json;

+ Response 200 (application/vnd.agility.api.v1+json)

        [
            {
                "id": "123",
                "createDate": "2018-06-15T10:00:00",
                "description": "some user description",
                "authorName": "Billy Smith",
                "authorUserId": "1234",
                "size": 12345,
                "name": "image.jpg",
                "url": "https://agility.api/api/blobs/sdfkjhweoi34/find",
                "urlIsInternal": true
            },
            {
                "id": "1212343",
                "createDate": "2018-06-15T10:00:00",
                "description": "some user description different one",
                "authorName": "Billy Smith",
                "authorUserId": "1234",
                "size": 12345,
                "name": "image.jpg",
                "url": "https://google.com/some.jpg",
                "urlIsInternal": false
            }            
        ]
        
# Group User Assigned Jobs / Checklists
        
## Submit a checklist result [/user/assigned-jobs/:jobid/checklists/:checklistId/results/submit]

- In case of checklist result of type SIGNATURE result value contains BASE64 string with image contents with type "image/png"

### /user/assigned-jobs/:jobid/checklists/:checklistId/results/submit [PUT]

+ Request (application/json)

        {
            "resultDate": "2018-06-15T10:00:00",
            "results":  [
                        {
                          "checklistItemId": "123",
                          "value" : "abc"
                        }
                    ]
        }
        
+ Response 201 (application/json)

        {
            "id": "checklist results id"
        }

## Save a checklist result [/user/assigned-jobs/:jobid/checklists/:checklistId/results/save]

- In case of checklist result of type SIGNATURE result value contains BASE64 string with image contents with type "image/png"

### /user/assigned-jobs/:jobid/checklists/:checklistId/results/save [PUT]

+ Request (application/json)

        {
            "resultDate": "2018-06-15T10:00:00",
            "results":  [
                        {
                          "checklistItemId": "123",
                          "value" : "abc"
                        }
                    ]
        }
        
+ Response 201 (application/json)

        {
            "id": "checklist results id"
        }
        
## Read previously saved checklist result [/user/assigned-jobs/:jobid/checklists/:checklistId/results/find]

- In case of checklist result of type SIGNATURE result value contains BASE64 string with image contents with type "image/png"

### /user/assigned-jobs/:jobid/checklists/:checklistId/results/find [GET]

+ Response 200 (application/json)

        {
            "lastSavedResult":
                {
                    "resultDate": "2018-06-15T10:00:00",
                    "results":  [
                                {
                                  "checklistItemId": "123",
                                  "value" : "abc"
                                }
                            ]
                }
        }

## Read checklist submittion status [/user/assigned-jobs/:jobid/checklists/:checklistId/results/issubmitted]

### /user/assigned-jobs/:jobid/checklists/:checklistId/results/issubmitted [GET]

+ Response 200 (application/json)

        {
            "isChecklistSubmitted": false
        }

# Group User Assigned Jobs / Routesheet

## Find a RouteSheets  [/user/assigned-jobs/:jobid/routesheet/find]
        
### /user/assigned-jobs/:jobid/routesheet/find [GET]  
+ Response 200 (application/json)

        {
            "id" : "123",
            "openItems" : 
                [
                    {
                        "routeSheetItemId": "342",
                        "asset": {
                            "id": "123",
                            "code": "",
                            "description": ""
                        },
                        "location": {
                            "location": {
                                "id": "123",
                                "code": "",
                                "description": ""
                            },
                            "site": {
                                "id": "123",
                                "code": "",
                                "description": ""
                            },
                            "subLocation": {
                                "id": "123",
                                "code": "",
                                "description": ""
                            }
                        },
                        "sortOrder": 11
                    }
                ],
            "completedItems" : 
                [
                    {
                        "routeSheetItemId": "343",
                        "asset": {
                            "id": "123",
                            "code": "",
                            "description": ""
                        },
                        "location": {
                            "location": {
                                "id": "123",
                                "code": "",
                                "description": ""
                            },
                            "site": {
                                "id": "123",
                                "code": "",
                                "description": ""
                            },
                            "subLocation": {
                                "id": "123",
                                "code": "",
                                "description": ""
                            }
                        },
                        "isPassed": false,
                        "completionComments": "Some completion comments",
                        "completionDate": "2018-06-15T10:00:00",
                         "sortOrder": 12
                    }
                ],
            "checklists" : 
                [
                   {
                        "id" : "123",
                        "description" : "abc"
                   }
                ]
        }

## Complete Routesheet item [/user/assigned-jobs/:jobid/routesheet/item/:routesheetitemid/complete]

### /user/assigned-jobs/:jobid/routesheet/item/:routesheetitemid/complete [POST]    

+ Request V5 (application/json)

    + Headers
            
            Acccept: application/vnd.agility.api.v5+json;
            
    + Body
    
            {
                "completionComments": "Some completion comments",
                "isPassed": true,
                "completionDate": "2018-06-15T10:00:00",
            }
            
+ Response 204

## Submit a checklist result for a route sheet item [/user/assigned-jobs/:jobid/routesheet/item/:routesheetitemid/checklists/:checklistid/results/submit]

### /user/assigned-jobs/:jobid/routesheet/item/:routesheetitemid/checklists/:checklistid/results/submit [PUT]

+ Request (application/json)

        {
            "resultDate": "2018-06-15T10:00:00",
            "results":  [
                        {
                          "checklistItemId": "123",
                          "value" : "abc"
                        }
                    ]
        }
        
+ Response 201 (application/json)

        {
            "id": "checklist results id"
        }

## Create route sheet item follow on job [/user/assigned-jobs/{jobId}/routesheet/item/{routesheetitemid}/follow-on-jobs/create]

### /user/assigned-jobs/{jobId}/routesheet/item/{routesheetitemid}/follow-on-jobs/create [POST]

+ Parameters

    + jobId:"123" (required,string) - assigned job id
    + routesheetitemid:"123 (required,string) - job route sheet item id

+ Request (application/json)

    + Body
    
            {
                "referenceId": "1234-23-24-124234sdfr",
                "costCodeId": "123",
                "craftId": "123",,
                "createDate": "2018-06-15T10:00:00",
                "description": "",
                "jobTypeId": "123",
                "priorityId": "123",
                "assignToSelf": false
            }

+ Response 201 (application/json)

    + Body
    
            {
                "followOnJobId": "123"
            }

        
# Group User Assigned Jobs / Parts        
        
## Issue part for job  [/user/assigned-jobs/{jobid}/parts/issue]

### /user/assigned-jobs/{jobid}/parts/issue [POST]    

+ Parameters

    + jobid:"123" (required,string) - assigned job id


+ Request (application/json)

        {
            "availableItemId": "123112as",
            "quantity": 1234.234,
            "issueDate": "2018-06-15T10:00:00"
        }

+ Response 201 (application/json)
        
        {
            "id": "1231234we"
        }


## Return part from job  [/user/assigned-jobs/{jobid}/parts/{partid}/return]

### /user/assigned-jobs/{jobid}/parts/{partid}/return [POST]  

+ Parameters

    + jobid:"123" (required,string) - assigned job id

    + partid:"123" (required,string) - part id to return 

+ Request (application/json)

        {
            "quantity": 1234.234,
            "returnDate": "2018-06-15T10:00:00"
        }

+ Response 204 (application/json)

# Group User Assgined Jobs / Notifications

## Notify about a job assigned for the user [/user/notify/jobassigned]

### /user/notify/jobassigned [POST]

+ Request (application/json)

        {
            "userSubClaim": "",
            "jobId": "123",
            "jobCode": "abc",
            "taskCode": "abc"
        }

+ Response 204

## Notify that a job, already assigned to the user, has been changed [/user/notify/jobchanged]

### /user/notify/jobchanged [POST]

+ Request (application/json)

        {
            "userSubClaim": "",
            "jobId": "123",
            "jobCode": "abc",
            "taskCode": "abc"
        }

+ Response 204


## Notify that a job assigned to the user has been unassigned [/user/notify/jobunassigned]

### /user/notify/jobunassigned [POST]

+ Request (application/json)

        {
            "userSubClaim": "",
            "jobId": "123",
            "jobCode": "abc",
            "taskCode": "abc"
        }

+ Response 204


## Notify that a job assigned to the user has been cancelled [/user/notify/jobcancelled]

### /user/notify/jobcancelled [POST]

+ Request (application/json)

        {
            "userSubClaim": "",
            "jobId": "123",
            "jobCode": "abc",
            "taskCode": "abc"
        }

+ Response 204


## Notify that a job assigned to the user has been completed [/user/notify/jobcompleted]

### /user/notify/jobcompleted [POST]

+ Request (application/json)

        {
            "userSubClaim": "",
            "jobId": "123",
            "jobCode": "abc",
            "taskCode": "abc"
        }

+ Response 204

# Group User Jobs / Parts    

## List issued parts for user job  [/user/jobs/{jobid}/parts/list]

### /user/jobs/{jobid}/parts/list [GET]

+ Parameters

    + jobid:"123" (required,string) - job id

+ Response 200 (application/json)

        [
            {
                "id": "12345",
                "item": {
                    "id": "1234",
                    "code": "ACE23",
                    "description": "some item",
                    "unitOfMeasure": {
                        "id": "12342",
                        "code": "uom code"
                    }
                },
                "bin": {
                    "id": "123456",
                    "code": "bin location code",
                    "store": {
                        "id": "12342",
                        "code": "store code",
                    }
                },
                "quantity": 1234.234
            }
        ]

## Count issued parts for user job  [/user/jobs/{jobid}/parts/count]

### /user/jobs/{jobid}/parts/count [GET]

+ Parameters

    + jobid:"1435" (required, string) - job id

+ Response 200 (application/json)

        {
            "count": 1234.234
        }


# Group User Jobs / Planned Parts    

## List planned kits for user job  [/user/jobs/{jobid}/planned/kits/list]

### /user/jobs/{jobid}/planned/kits/list [GET]

+ Parameters

    + jobid:"123" (required,string) - assigned job id

+ Response 200 (application/json)

        [
            {
                "id": "12345",
                "name": "kid code",
                "quantity" : 2,
                "partsInTotal": 23,
                "partsQuantity": 7
            }
        ]
       
## Find planned kit for user job  [/user/jobs/{jobid}/planned/kits/{kitid}/find]

### /user/jobs/{jobid}/planned/kits/{kitid}/find [GET]

+ Parameters

    + jobid:"123" (required,string) - user job id
    + kitid:"123" (required,string) - kit id

+ Response 200 (application/json)

    + Attributes (object)
    
        + item (object) - not null
        + store (object) - can be null
    

    + Body 
    
            {
                "id": "123412",
                "name": "kid code",
                "kitItems": 
                [
                    {
                        "id": "12314",
                        "item": {
                            "id": "12314",
                            "code": "item code",
                            "description": "item description",
                            "unitOfMeasure": {
                                "id": "12342",
                                "code": "uom code"
                            }
                        },
                        "store": {
                            "id": "12345",
                            "code": "store code",
                        },
                        "quantity" : 2
                    }
                ]
            }
        

## Sumarize planned parts for user job  [/user/jobs/{jobid}/planned/parts/total]

### /user/jobs/{jobid}/planned/parts/total [GET]

+ Parameters

    + jobid:"123" (required,string) - user job id

+ Response 200 (application/json)

        
        {
            "partsInTotal": 23,
            "partsQuantity": 7
        }
        

## List planned parts for user job  [/user/jobs/{jobid}/planned/parts/list]

### /user/jobs/{jobid}/planned/parts/list [GET]

+ Parameters

    + jobid:"123" (required,string) - user job id

+ Response 200 (application/json)

    + Attributes (object)
    
        + item (object) - not null
        + store (object) - can be null
        

    + Body

            [
                {
                    "id": "12345",
                    "item": {
                        "id": "1234",
                        "code": "ACE23",
                        "description": "some item",
                        "unitOfMeasure": {
                            "id": "12342",
                            "code": "uom code"
                        }
                    },
                    "store": {
                        "id": "12342",
                        "code": "store code",
                    },
                    "quantity" : 1234.234
                }
            ]

## List Kit Part Locations  [/user/jobs/{jobid}/planned/kits/{kitid}/parts/{kitpartid}/locations/list]

### /user/jobs/{jobid}/planned/kits/{kitid}/parts/{kitpartid}/locations/list [GET]

+ Parameters

    + jobid:"123" (required,string) - user job id
    + kitid:"123" (required,string) - planned kit id
    + kitpartid:"123" (required,string) - planned kit part id

+ Response 200 (application/vnd.agility.api.v6+json)

    + Body

            [
                {
                    "availableItemId": "123412",
                    "bin": {
                        "id": "12312412",
                        "code": "bin code",
                        "store": {
                            "id": "12345",
                            "code": "store code"
                        }
                    },
                    "availableQuantity":  1234.234
                }
            ]            

## List Planned Part Locations  [/user/jobs/{jobid}/planned/parts/{plannedpartid}/locations/list]

### /user/jobs/{jobid}/planned/parts/{plannedpartid}/locations/list [GET]

+ Parameters

    + jobid:"123" (required,string) - user job id
    + plannedpartid:"123" (required,string) - planned part id

+ Response 200 (application/vnd.agility.api.v6+json)

    + Body

            [
                {
                    "availableItemId": "123412",
                    "bin": {
                        "id": "12312412",
                        "code": "bin code",
                        "store": {
                            "id": "12345",
                            "code": "store code"
                        }
                    },
                    "availableQuantity":  1234.234
                }
            ]
            



# Group User Completed Jobs

## List the user's completed jobs [/user/completed-jobs/list]

### /user/completed-jobs/list [GET]

+ Request (application/json)

+ Response 200 (application/json)

        [
            {
                "completionComments": "",
                "costCode": "",
                "id": "123",
                "jobCode": "",
                "jobType": "",
                "location": {
                    "location": {
                        "id": "123",
                        "code": "",
                        "description": ""
                    },
                    "site": {
                        "id": "123",
                        "code": "",
                        "description": ""
                    },
                    "subLocation": {
                        "id": "123",
                        "code": "",
                        "description": ""
                    }
                },
                "asset": {
                    "id": "123",
                    "code": "",
                    "description": ""
                },
                "priority": {
                    "id": "ref-231412",
                    "description": "Urgent"
                },
                "craft": {
                    "id": "123",
                    "description": "Air Conditioning Engineer"
                },
                "scheduleStartDate": "2018-06-15T10:00:00",
                "startDate": "2018-06-15T10:00:00",
                "status": {
                    "description": "Accepted",
                    "id": "456"
                },
                "statusChangeDate": "2018-06-15T10:00:00",
                "taskDescription": "",
                "workOrderDescription": "",
                "hasChecklists" : true,
                "hasRouteSheet" : true,
                "completionTargetDate": "2018-06-15T10:00:00",
                "responseTargetDate": "2018-06-15T10:00:00",
            }
        ]

## Issue part for completed job  [/user/completed-jobs/{jobid}/parts/issue]

### /user/completed-jobs/{jobid}/parts/issue [POST]    

+ Parameters

    + jobid:"123" (required,string) - completed job id


+ Request (application/json)

        {
            "availableItemId": "123112as",
            "quantity": 1234.234,
            "issueDate": "2018-06-15T10:00:00"
        }

+ Response 201 (application/json)
        
        {
            "id": "1231234we"
        }

## Return part from completed job  [/user/completed-jobs/{jobid}/parts/{partid}/return]

### /user/completed-jobs/{jobid}/parts/{partid}/return [POST]  

+ Parameters

    + jobid:"123" (required,string) - assigned job id

    + partid:"123" (required,string) - part id to return 

+ Request (application/json)

        {
            "quantity": 1234.234,
            "returnDate": "2018-06-15T10:00:00"
        }

+ Response 204 (application/json)

# Group User / Coworkers 

## List coworkers [/user/coworkers/list?query={query}]

### /user/coworkers/list?query={query} [GET]

+ This endpoint allows to search for other users in the same user groups

+ Parameters

    + query:"Bartek" (string) - First or last name query
    
+ Response 200 (application/json)

        [
            {
                "name": "Bartek Cossack",
                "id": "123",
                "crafts":
                [
                    {
                        "id": 123
                    }
                ]added
            }
        ]
        
# Group Assets

## List assets [/assets/list?query={query}]

### /assets/list?query={query} [POST]

+ Parameters

    + query:"fuse" (string) - asset query
    
+ Request (application/json)
    
    + Body
    
            {
                "locationFilter":
                {
                    "sites": [
                    {
                        "id": "123"
                    }
                    ],
                    "locations": [
                    {
                        "id": "123"
                    }
                    ],
                    "sublocations": [
                    {
                        "id": "123"
                    }
                    ]
                },
                "assetStatusFilter": [
                    {
                        "id": "123"
                    }
                ],
                "equipmentGroupFilter": [
                    {
                        "id": "123"
                    }
                ],
                "availableForWorkFilter": true; 
            }

+ Response 200 (application/json)

        [
            {
                "code": "12301",
                "description": "Conveyor belt 001",
                "id": "123",
                "imageUrl": "https://api/blobid",
                "assetStatus": {
                    "id": "123"
                    "name": "In Use"
                },
                "location": {
                    "location": {
                        "id": "123",
                        "code": "",
                        "description": ""
                    },
                    "site": {
                        "id": "123",
                        "code": "",
                        "description": ""
                    },
                    "sublocation": {
                        "id": "123",
                        "code": "",
                        "description": ""
                    }
                }
            }
        ]

+ Request V6 (application/json)

    + Headers
        
            Acccept: application/vnd.agility.api.v6+json;

+ Response 200 (application/vnd.agility.api.v6+json)

        [
            {
                "code": "12301",
                "description": "Conveyor belt 001",
                "id": "123"
            }
        ]
        
## List asset structure [/assets/structure/find]

### /assets/structure/find [GET]

+ Response 200 (application/json)

        {
            "sites" : 
            [
                {
                    "id": "123",
                    "code": "CB001",
                    "description": "Conveyor belt 001",
                    "locations": 
                    [
                        {
                            "id": "123",
                            "code": "CB001",
                            "description": "Conveyor belt 002",
                            "sublocations": 
                            [
                                {
                                    "id": "123",
                                    "code": "CB001",
                                    "description": "Conveyor belt 003"
                                }
                            ]
                        }
                    ]
                }
            ]
        }

## Find asset [/assets/{assetId}/find]

### /assets/{assetId}/find [GET]
        
+ Parameters

    + assetId:"123" (required,string) - asset id
    
+ Response 200 (application/json)

        {
            "id": "123",
            "code": "12301",
            "description": "Conveyor belt 001",
            "assetStatus": {
                "id": "123"
                "name": "In Use"
            },
            "location": {
                "location": {
                    "id": "123",
                    "code": "",
                    "description": ""
                },
                "site": {
                    "id": "123",
                    "code": "",
                    "description": ""
                },
                "sublocation": {
                    "id": "123",
                    "code": "",
                    "description": ""
                }
            },
            "manufacturer" : "Conveyor belt company",
            "model" : "CB/001"
            "serialNumber" : "123ABC"
            "equipmentGroup" : "Belts",
            "lastModifiedAt" : "2018-06-15T10:00:00",
            "availableForWork": true
        }
        
   
## Find an asset attachments [/assets/{assetId}/attachments/list]     
### /assets/{assetId}/attachments/list [GET]

+ Parameters

    + assetId:"123" (required,string) - asset id
    
+ Response 200 (application/json)

        [
            {
                "id": "123",
                "createDate": "2018-06-15T10:00:00",
                "description": "some user description",
                "authorName": "Billy Smith",
                "authorUserId": "1234",
                "size": 12345,
                "name": "image.jpg",
                "url": "https://agility.api/api/blobs/sdfkjhweoi34/find",
                "urlIsInternal": true
            },
            {
                "id": "1212343",
                "createDate": "2018-06-15T10:00:00",
                "description": "some user description different one",
                "authorName": "Billy Smith",
                "authorUserId": "1234",
                "size": 12345,
                "name": "image.jpg",
                "url": "https://google.com/some.jpg",
                "urlIsInternal": false
            }            
        ]

## Create an asset attachment [/assets/{assetId}/attachments/create]
        
### /assets/{assetId}/attachments/create [POST]

+ Request (multipart/form-data; boundary={unique boundary text}) 

    + Body
    
            --{unique boundary text}
            Content-Disposition: form-data; name="attachmentData"
            Content-Type: application/json
            
            {
                "createDate": "2018-06-15T10:00:00",
                "description": "user text",
                "fileName": "filename.jpg"
            }
            
            --{unique boundary text}
            Content-Disposition: form-data; name="attachmentFile"
            Content-Type: image/jpeg
            Content-Transfer-Encoding: base64
            Content-Size: 1000
    
            SDFKJHWEFKJ;SDC,NSA.,VJNA;DSFJKAJKGFSDVFKDS;FGJKLHSW;GAS;DJKFHKSAJDGHKSAJDHGFKSAJDHGSAJDFKSAJDF
            --{unique boundary text}
            
+ Response 200 (application/json)

    + Body

            {
                "id": "123"
            }
            
## List an asset jobs [/assets/{assetId}/jobs/list?take={take}&skip={skip}]

### /assets/{assetId}/jobs/list [GET]
        
+ Parameters

    + assetId:"123" (required,string) - asset id
    + take: 5 (optional int) - get number of records
    + skip: 10 (optional int) - skip number of recordskip take for asset
    
+ Response 200 (application/json)

        [
            {
                "id": "123",
                "assignedJobId": "123",
                "availableJobId": "123",
                "status": {
                    "description": "Accepted",
                    "id": "456"
                },
                "jobCode": "12301",
                "jobType": "Planned Maintenance", 
                "taskDescription": "Task 1 check tyres",
                "workOrderDescription": "Check tyres",
                "lastUpdated": "2018-06-15T10:00:00"
            }
        ]        
        
## Find an asset job [/assets/{assetId}/jobs/{assetJobId}/find]
        
### /assets/{assetId}/jobs/{assetJobId}/find [GET]

#### Deprecated response properties:
- `callerName`

+ Parameters

    + assetId:"123" (required,string) - asset id
    + assetJobId:"123" (required,string) - asset job id

+ Request (application/json)

+ Response 200 (application/json)

        {
            "completionComments":"",
            "completionTargetDate": "2018-06-15T10:00:00",
            "completionWarningDate": "2018-06-15T10:00:00",
            "costCode": "",
            "hasBeenRespondedTo": true,
            "id": "123",
            "jobCode": "",
            "jobType": "",
            "location": {
                "location": {
                    "id": "123",
                    "code": "",
                    "description": ""
                },
                "site": {
                    "id": "123",
                    "code": "",
                    "description": ""
                },
                "sublocation": {
                    "id": "123",
                    "code": "",
                    "description": ""
                }
            },
            "asset": {
                "id": "123",
                "code": "",
                "description": ""
            },
            "priority": "",
            "responseTargetDate": "2018-06-15T10:00:00",
            "responseWarningDate": "2018-06-15T10:00:00",
            "startDate": "2018-06-15T10:00:00",
            "status": {
                "description": "Accepted",
                "id": "456"
            },
            "taskDescription": "",
            "workOrderDescription": "",
            "hasRouteSheet" : true,
            "callerName": "Name",
            "caller": {
                "name": "John Doe",
                "phone": "+48 12345678",
                "email": "john.doe@ssginsight.com"
            }
        }
        
## List asset job attachments [/assets/{assetId}/jobs/{assetJobId}/attachments/list]     
### /assets/{assetId}/jobs/{assetJobId}/attachments/list [GET]

+ Parameters

    + assetId:"123" (required,string) - asset id
    + assetJobId:"123"   (required,string) - asset job id
    
+ Response 200 (application/json)

        [
            {
                "id": "123",
                "createDate": "2018-06-15T10:00:00",
                "description": "some user description",
                "authorName": "Billy Smith",
                "authorUserId": "1234",
                "size": 12345,
                "name": "image.jpg",
                "url": "https://agility.api/api/blobs/sdfkjhweoi34/find",
                "urlIsInternal": true
            },
            {
                "id": "1212343",
                "createDate": "2018-06-15T10:00:00",
                "description": "some user description different one",
                "authorName": "Billy Smith",
                "authorUserId": "1234",
                "size": 12345,
                "name": "image.jpg",
                "url": "https://google.com/some.jpg",
                "urlIsInternal": false
            }            
        ]
            
# Group Users
        
## Find a user's avatar [/users/:userId/avatar/find]

### /users/:userId/avatar/find [GET]
 This endpoint should return the PNG file for the user's avatar. 
 This endpoint should not require authentication - i.e. it should be publicly available.

+ Response 200 (image/png)

## Issue part for user  [/users/{userId}/parts/issue]

### /users/{userId}/parts/issue [POST]    

+ Parameters

    + userId:"123" (required,string) - user id


+ Request (application/json)

        {
            "availableItemId": "123112as",
            "quantity": 1234.234,
            "issueDate": "2018-06-15T10:00:00",
            "costCodeId": "2718"
        }

+ Response 201 (application/json)
        
        {
            "id": "1231234we"
        }


## Return part from user  [/users/{userId}/parts/{partid}/return]

### /users/{userId}/parts/{partid}/return [POST]  

+ Parameters

    + userId:"123" (required,string) - user id

    + partid:"123" (required,string) - part id to return 

+ Request (application/json)

        {
            "quantity": 1234.234,
            "returnDate": "2018-06-15T10:00:00",
            "costCodeId": "2718"
        }

+ Response 204 (application/json)

# Group Jobs

## Create a job [/jobs/create]

### /jobs/create [POST]

+ Request V3 (application/json)

    + Headers
    
            Acccept: application/vnd.agility.api.v3+json;
            X-Assign-To-Self: false
    
    + Body
    
            {
                "referenceId": "030B4A82-1B7C-11CF-9D53-00AA003C9CB6",
                "assetCode": "AC1",
                "costCodeId": "123",
                "craftId": "123",,
                "createDate": "2018-06-15T10:00:00",
                "description": "",
                "jobTypeId": "123",
                "priorityId": "123"
            }

+ Response 200 (application/vnd.agility.api.v3+json)

        {
            "jobCode": ""
        }
        
+ Request V2 (application/json)

    + Headers
    
            Acccept: application/vnd.agility.api.v2+json;
            X-Assign-To-Self: false
    
    + Body
    
            {
                "assetCode": "AC1",
                "costCodeId": "123",
                "craftId": "123",,
                "createDate": "2018-06-15T10:00:00",
                "description": "",
                "jobTypeId": "123",
                "priorityId": "123"
            }

+ Response 200 (application/vnd.agility.api.v2+json)

        {
            "jobCode": ""
        }
        
+ Request V1 (application/json)

    + Headers
    
            Acccept: application/vnd.agility.api.v1+json;
            X-Assign-To-Self: false
    
    + Body
    
            {
                "assetId": "123",
                "costCodeId": "123",
                "craftId": "123",,
                "createDate": "2018-06-15T10:00:00",
                "description": "",
                "jobTypeId": "123",
                "priorityId": "123"
            }

+ Response 200 (application/vnd.agility.api.v1+json)

        {
            "jobCode": ""
        }
        
## Find a checklist definition attached to a job [/jobs/:jobId/checklists/:checklistId/find]
        
### /jobs/:jobId/checklists/:checklistId/find [GET]  

#### Checklist item definition
+ Common fields:
   + id
   + label
   + controlType
   + validationRules
        + isMandatory
   + sortOrder

+ ControlType 
   + Label, 
   + TextBox, 
   + CheckBox, 
   + ComboBox, 
   + Signature, 
   + CriticalityBox

+ TextBox fields:
    + dataType: string, int, decimal, date, datetime, interval, currency
    + checksum : NoChecksum, Element, Total
    + validationRules:
        + minLength
        + maxLength

+ ComboBox fields:
   + options (mandatory)
   
+ CriticalityBox fields:
   + criticality: NONE, GREEN, AMBER, PINK, RED
   + options (mandatory)

+ Response 200 (application/json)

        {
            "id" : "123",
            "code" : "abc",
            "description" : "abc",
            "mustComplete": true,
            "completeBeforeStatusId": "123",
            "createdBySFG20": true,
            "items" : [
                {
                    "id" : "123",
                    "controlType": "Example",
                    "label" : "abc",
                    "datatype": "string",
                    "sortOrder" : 1,
                    "options": [
                        {
                          "id" : "123",
                          "description" : "abc"
                        }
                    ],
                    "validationRules" : {
                            "isMandatory": true,
                            "minLenght" : 0,
                            "maxLenght" : 12,
                            "checksum" : "element"
                        },
                    "criticality": "NONE"
                },
                {
                    "id" : "123",
                    "controlType": "Label",
                    "label" : "abc",
                    "sortOrder" : 2,
                    "criticality": "NONE"
                },
                {
                    "id" : "123",
                    "controlType": "TextBox",
                    "label" : "abc",
                    "datatype": "string",
                    "sortOrder" : 3,
                    "validationRules" : {
                            "isMandatory": true,
                            "minLenght" : 0,
                            "maxLenght" : 12,
                            "checksum" : "element"
                        },
                    "criticality": "NONE"
                },
                {
                    "id" : "123",
                    "controlType": "Checkbox",
                    "label" : "abc",
                    "sortOrder" : 4,
                    "criticality": "NONE"
                },
                {
                    "id" : "123",
                    "controlType": "Checkbox",
                    "label" : "abc",
                    "sortOrder" : 5,
                    "criticality": "NONE"
                },
                {
                    "id" : "123",
                    "controlType": "Combobox",
                    "label" : "abc",
                    "sortOrder" : 6,
                    "criticality": "NONE",
                    "options": [
                        {
                          "id" : "123",
                          "description" : "abc"
                        }
                    ],
                    "validationRules" : {
                            "isMandatory": true
                        }
                },
                {
                    "id" : "123",
                    "controlType": "Signature",
                    "label" : "abc",
                    "sortOrder" : 7,
                    "criticality": "NONE",
                    "validationRules" : {
                            "isMandatory": true
                        }
                },
                {
                    "id" : "125",
                    "controlType": "CriticalityBox",
                    "label" : "abc",
                    "sortOrder" : 4,
                    "criticality": "RED",
                    "options": [
                        {
                          "id" : "123",
                          "description" : "Yes"
                        },
                        {
                          "id" : "123",
                          "description" : "No"
                        }
                    ],
                    "validationRules" : {
                            "isMandatory": true
                        }                
                },
            ]
        }
        
        - controlType : Label, TextBox, CheckBox, ComboBox, Signature (mandatory)
        - options (only for Combobox, optional)
        - checksum : NoChecksum, Element, Total (optional)
        - datatype : string, int, decimal, currency, interval, date, datetime (optional)


## Find a job [/jobs/{assignedJobId}/find]
        
### /jobs/{assignedJobId}/find [GET]

#### Deprecated response properties:
- `callerName`

+ checklists.status : `Incomplete` `Saved` `Completed`

+ Parameters

    + assignedJobId:"123" (required,string) - assigned job id

+ Request (application/json)

+ Response 200 (application/json)

        {
            "active": false,
            "completionComments" : "",
            "completionTargetDate": "2018-06-15T10:00:00",
            "completionWarningDate": "2018-06-15T10:00:00",
            "costCode": "",
            "hasBeenRespondedTo": true,
            "id": "123",
            "jobId": "234",
            "jobCode": "",
            "jobType": "",
            "location": {
                "location": {
                    "id": "123",
                    "code": "",
                    "description": ""
                },
                "site": {
                    "id": "123",
                    "code": "",
                    "description": ""
                },
                "subLocation": {
                    "id": "123",
                    "code": "",
                    "description": ""
                }
            },
            "asset": {
                "id": "123",
                "code": "",
                "description": ""
            },
            "priority": "",
            "craft": {
                "id": "123",
                "description": "Air Conditioning Engineer"
            },
            "responseTargetDate": "2018-06-15T10:00:00",
            "responseWarningDate": "2018-06-15T10:00:00",
            "scheduleStartDate": "2018-06-15T10:00:00",
            "startDate": "2018-06-15T10:00:00",
            "status": {
                "description": "Accepted",
                "id": "456"
            },
            "statusChangeDate": "2018-06-15T10:00:00",
            "taskDescription": "",
            "workOrderDescription": "",
            "checklists" : [
                {
                    "id" : "123",
                    "description" : "abc",
                    "status": "Incomplete | Saved | Completed",
                    "mandatory": false

                }
            ],
            "hasRouteSheet" :true,
            "callerName": "Name",
            "startedAt" : "2018-06-15T10:00:00",
            "caller": 
            {
                "name": "John Doe",
                "phone": "+48 12345678",
                "email": "john.doe@ssginsight.com"
            },
            "hasHazards" : false
        }
        

+ Request V1 (application/json)

    + Parameters

        + jobid:"123" (required,string) - assigned job id
    
    + Headers
            
            Acccept: application/vnd.agility.api.v1+json;

+ Response 200 (application/vnd.agility.api.v1+json)

        {
            "active": false,
            "completionTargetDate": "2018-06-15T10:00:00",
            "completionWarningDate": "2018-06-15T10:00:00",
            "costCode": "",
            "hasBeenRespondedTo": true,
            "id": "123",
            "jobCode": "",
            "jobType": "",
            "location": {
                    "asset": ""
                    "location": "",
                    "site": "",
                    "subLocation": ""
            },
            "priority": "",
            "responseTargetDate": "2018-06-15T10:00:00",
            "responseWarningDate": "2018-06-15T10:00:00",
            "scheduleStartDate": "2018-06-15T10:00:00",
            "startDate": "2018-06-15T10:00:00",
            "status": {
                "description": "Accepted",
                "id": "456"
            },
            "taskDescription": "",
            "workOrderDescription": "",
            "checklists" : [
                {
                    "id" : "123",
                    "description" : "abc"
                }
            ],
            "hasRouteSheet" :true
        }
        
## List a job hazards [/jobs/{jobId}/hazards]
        
### /jobs/{jobId}/hazards [GET]

+ hazards.source : `CUSTOM` `ASSET` `SITE` `LOCATION` `SUBLOCATION`

+ Parameters

    + jobId:"123" (required,string) - job id

+ Request (application/json)

+ Response 200 (application/json)

        [
            {
                "name": "Thermal",
                "source": "CUSTOM | ASSET | SITE | LOCATION | SUBLOCATION"
            }
        ]
        
## Create a job attachment [/jobs/:referenceId/attachments/create]
        
### /jobs/:referenceId/attachments/create [POST]

+ Request V3 (multipart/form-data; boundary={unique boundary text}) 
    
    + Headers
    
            Acccept: application/vnd.agility.api.v3+json;
    + Body
    
            --{unique boundary text}
            Content-Disposition: form-data; name="attachmentData"
            Content-Type: application/json
            
            {
                "createDate": "2018-06-15T10:00:00",
                "description": "user text",
                "fileName": "filename.jpg"
            }
            
            --{unique boundary text}
            Content-Disposition: form-data; name="attachmentFile"
            Content-Type: image/jpeg
            Content-Transfer-Encoding: base64
            Content-Size: 1000
    
            SDFKJHWEFKJ;SDC,NSA.,VJNA;DSFJKAJKGFSDVFKDS;FGJKLHSW;GAS;DJKFHKSAJDGHKSAJDHGFKSAJDHGSAJDFKSAJDF
            --{unique boundary text}
            
+ Response 200 (application/vnd.agility.api.v3+json)

    + Body

            {
                "id": "123"
            }

## Create a job attachment [/jobs/:jobCode/attachments/create]
        
### /jobs/:jobCode/attachments/create [POST]

+ Request V1 (multipart/form-data; boundary={unique boundary text}) 

    + Headers
    
            Acccept: application/vnd.agility.api.v1+json;
            
    + Body
    
            --{unique boundary text}
            Content-Disposition: form-data; name="attachmentData"
            Content-Type: application/json
            
            {
                "createDate": "2018-06-15T10:00:00",
                "description": "user text",
                "fileName": "filename.jpg"
            }
            
            --{unique boundary text}
            Content-Disposition: form-data; name="attachmentFile"
            Content-Type: image/jpeg
            Content-Transfer-Encoding: base64
            Content-Size: 1000
    
            SDFKJHWEFKJ;SDC,NSA.,VJNA;DSFJKAJKGFSDVFKDS;FGJKLHSW;GAS;DJKFHKSAJDGHKSAJDHGFKSAJDHGSAJDFKSAJDF
            --{unique boundary text}
            
+ Response 200 (application/json)

    + Body

            {
                "id": "123"
            }
            
## Update a job's status [/jobs/:jobId/status/update]

### /jobs/:jobId/status/update [POST]

+ `actionDateTime` (optional)...

+ Request (application/json)

        {
            "statusId": "123",
            "actionDateTime": "2018-06-15T10:00:00"
        }

+ Response 204

# Group Available Jobs

## Data Structures
### Sort (object)
+ sortBy (SortBy)
+ sortOrder (SortOrder)

### SortBy (enum)
+ StartDate
+ DueDate
+ JobId
+ Status
+ Description
+ AssetName
+ JobType
+ Location
+ Priority
+ ResponseDate

### SortOrder (enum)
+ Ascending
+ Descending

## List available jobs [/available-jobs/list?assetFilter=belt]

### /available-jobs/list?assetFilter=belt [POST]

#### Deprecated response properties:
- `taskDescription`

+ Request (application/json)
    + Attributes
        + crafts (array)
            + (object)
                + id: 123
        + locationFilter (object)
            + sites (array)
                + (object)
                    + id: 123
            + locations (array)
                + (object)
                    + id: 123
            + sublocations (array)
                + (object)
                    + id: 123
        + jobTypes (array)
            + (object)
                + id: 123
        + statuses (array)
            + (object)
                + id: 123
        + startDate (object)
            + from: `2019-01-15T10:00:00`
            + to: `2019-06-15T10:00:00`
        + dueDate (object)
            + from: `2019-05-15T10:00:00`
            + to: `2019-10-15T10:00:00`
        + sort (Sort)


+ Response 200 (application/json)

        [
            {
                "completionComments":"",
                "completionTargetDate": "2018-06-15T10:00:00",
                "completionWarningDate": "2018-06-15T10:00:00",
                "costCode": "",
                "hasBeenRespondedTo": true,
                "id": "123",
                "jobCode": "",
                "jobType": "",
                "location": {
                    "location": {
                        "id": "123",
                        "code": "",
                        "description": ""
                    },
                    "site": {
                        "id": "123",
                        "code": "",
                        "description": ""
                    },
                    "subLocation": {
                        "id": "123",
                        "code": "",
                        "description": ""
                    }
                },
                "asset": {
                    "id": "123",
                    "code": "",
                    "description": ""
                },
                "priority": "",
                "responseTargetDate": "2018-06-15T10:00:00",
                "responseWarningDate": "2018-06-15T10:00:00",
                "startDate": "2018-06-15T10:00:00",
                "status": {
                    "description": "Accepted",
                    "id": "456"
                 },
                "taskDescription": "",
                "task": {
                  "id": "123",
                  "code": "task01",
                  "description": "desc"
                },
                "workOrderDescription": "",
                "callerName": "Name",
                "hasHazards" : false
            }
        ]

+ Request V5 (application/json)

    + Headers
            
            Acccept: application/vnd.agility.api.v5+json;
            
    + Body
    
            {
                "crafts": [
                    {
                        "id": "123"
                    }
                ],
                "locationFilter":
                {
                    "sites": [
                    {
                        "id": "123"
                    }
                    ],
                    "locations": [
                    {
                        "id": "123"
                    }
                    ],
                    "sublocations": [
                    {
                        "id": "123"
                    }
                    ]
                },
                "jobTypes": [
                    {
                        "id": "123"
                    }
                ],
                "statuses": [
                    {
                        "id": "123"
                    }
                ],
                "startDate":
                {
                    "from": "2019-01-15T10:00:00",
                    "to": "2019-06-15T10:00:00"
                },
                "dueDate":
                {
                    "from": "2019-05-15T10:00:00",
                    "to": "2019-10-15T10:00:00"
                }                
            }

+ Response 200 (application/vnd.agility.api.v5+json)

        [
            {
                "completionTargetDate": "2018-06-15T10:00:00",
                "completionWarningDate": "2018-06-15T10:00:00",
                "costCode": "",
                "hasBeenRespondedTo": true,
                "id": "123",
                "jobCode": "",
                "jobType": "",
                "location": {
                    "location": "",
                    "site": "",
                    "subLocation": ""
                },
                "asset": {
                    "code": "",
                    "description": ""
                },
                "priority": "",
                "responseTargetDate": "2018-06-15T10:00:00",
                "responseWarningDate": "2018-06-15T10:00:00",
                "startDate": "2018-06-15T10:00:00",
                "status": {
                    "description": "Accepted",
                    "id": "456"
                 },
                "taskDescription": "",
                "workOrderDescription": ""
            }
        ]
        
+ Request V4 (application/json)

    + Headers
            
            Acccept: application/vnd.agility.api.v4+json;

+ Response 200 (application/vnd.agility.api.v4+json)

        [
            {
                "completionTargetDate": "2018-06-15T10:00:00",
                "completionWarningDate": "2018-06-15T10:00:00",
                "costCode": "",
                "hasBeenRespondedTo": true,
                "id": "123",
                "jobCode": "",
                "jobType": "",
                "location": {
                    "location": "",
                    "site": "",
                    "subLocation": ""
                },
                "asset": {
                    "code": "",
                    "description": ""
                },
                "priority": "",
                "responseTargetDate": "2018-06-15T10:00:00",
                "responseWarningDate": "2018-06-15T10:00:00",
                "startDate": "2018-06-15T10:00:00",
                "status": {
                    "description": "Accepted",
                    "id": "456"
                 },
                "taskDescription": "",
                "workOrderDescription": ""
            }
        ]

## Assign available job to current user [/available-jobs/:availableJobId/assigntoself]

### /available-jobs/:availableJobId/assigntoself [POST]

+ Request V4 (application/json)

    + Headers
            
            Acccept: application/vnd.agility.api.v4+json;
            
+ Response 204 
  

## Find an available job [/available-jobs/{availableJobId}/find]
        
### /available-jobs/{availableJobId}/find [GET]

#### Deprecated response properties:
- `callerName`

+ Parameters

    + availableJobId:"123" (required,string) - available job id

+ Request (application/json)

+ Response 200 (application/json)

        {
            "completionComments":""
            "completionTargetDate": "2018-06-15T10:00:00",
            "completionWarningDate": "2018-06-15T10:00:00",
            "costCode": "",
            "hasBeenRespondedTo": true,
            "id": "123",
            "jobCode": "",
            "jobType": "",
            "location": {
                "location": {
                    "id": "123",
                    "code": "",
                    "description": ""
                },
                "site": {
                    "id": "123",
                    "code": "",
                    "description": ""
                },
                "subLocation": {
                    "id": "123",
                    "code": "",
                    "description": ""
                }
            },
            "asset": {
                "id": "123",
                "code": "",
                "description": ""
            },
            "priority": "",
            "responseTargetDate": "2018-06-15T10:00:00",
            "responseWarningDate": "2018-06-15T10:00:00",
            "startDate": "2018-06-15T10:00:00",
            "status": {
                "description": "Accepted",
                "id": "456"
            },
            "taskDescription": "",
            "workOrderDescription": "",
            "hasRouteSheet" : true,
            "callerName": "Name",
            "caller": 
            {
                "name": "John Doe",
                "phone": "+48 12345678",
                "email": "john.doe@ssginsight.com"
            },
            "hasHazards": false
        }

+ Request V5 (application/json)

    + Headers
            
            Acccept: application/vnd.agility.api.v5+json;


+ Response 200 (application/vnd.agility.api.v5+json)

        {
            "completionTargetDate": "2018-06-15T10:00:00",
            "completionWarningDate": "2018-06-15T10:00:00",
            "costCode": "",
            "hasBeenRespondedTo": true,
            "id": "123",
            "jobCode": "",
            "jobType": "",
            "location": {
                "location": "",
                "site": "",
                "subLocation": ""
            },
            "asset": {
                "code": "",
                "description": ""
            },
            "priority": "",
            "responseTargetDate": "2018-06-15T10:00:00",
            "responseWarningDate": "2018-06-15T10:00:00",
            "scheduleStartDate": "2018-06-15T10:00:00",
            "startDate": "2018-06-15T10:00:00",
            "status": {
                "description": "Accepted",
                "id": "456"
            },
            "taskDescription": "",
            "workOrderDescription": "",
            "hasRouteSheet" : true
        }
        
## Find a available job attachments [/available-jobs/{availableJobId}/attachments/list]
        
### /available-jobs/{availableJobId}/attachments/list [GET]

+ Parameters

    + availableJobId:"123" (required,string) - available job idhments list for available jobs

+ Response 200 (application/json)

        [
            {
                "id": "123",
                "createDate": "2018-06-15T10:00:00",
                "description": "some user description",
                "authorName": "Billy Smith",
                "authorUserId": "1234",
                "size": 12345,
                "name": "image.jpg",
                "url": "https://agility.api/api/blobs/sdfkjhweoi34/find",
                "urlIsInternal": true
            },
            {
                "id": "1212343",
                "createDate": "2018-06-15T10:00:00",
                "description": "some user description different one",
                "authorName": "Billy Smith",
                "authorUserId": "1234",
                "size": 12345,
                "name": "image.jpg",
                "url": "https://google.com/some.jpg",
                "urlIsInternal": false
            }            
        ]
        
# Group Helpdesk Requests

## Create a helpdesk request [/helpdesk-requests/create]

### /helpdesk-requests/create [POST]

+ Request V3 (application/json)

    + Headers
            
            Acccept: application/vnd.agility.api.v3+json;
            
    + Body
    
            {
                "referenceId": "030B4A82-1B7C-11CF-9D53-00AA003C9CB6",
                "assetCode": "AC1",
                "costCodeId": "123",
                "createDate": "2018-06-15T10:00:00",
                "description": "",
                "priorityId": "123"
            }
            
+ Response 200 (application/vnd.agility.api.v3+json)

        {
            "helpdeskRequestCode": ""
        }
        
+ Request V2 (application/json)

    + Headers
            
            Acccept: application/vnd.agility.api.v2+json;
            
    + Body
    
            {
                "assetCode": "AC1",
                "costCodeId": "123",
                "createDate": "2018-06-15T10:00:00",
                "description": "",
                "priorityId": "123"
            }
            
+ Response 200 (application/vnd.agility.api.v2+json)

        {
            "helpdeskRequestCode": ""
        }
        
        
+ Request V1 (application/json)

    + Headers
    
            Acccept: application/vnd.agility.api.v1+json;
            
    + Body
    
            {
                "assetId": "123",
                "costCodeId": "123",
                "createDate": "2018-06-15T10:00:00",
                "description": "",
                "priorityId": "123"
            }
        

    
+ Response 200 (application/vnd.agility.api.v1+json)

        {
            "helpdeskRequestCode": ""
        }

 
## Create a Helpdesk Request attachment [/helpdesk-requests/:referenceId/attachments/create]
        
### /helpdesk-requests/:referenceId/attachments/create [POST]

+ Request V3 (multipart/form-data; boundary={unique boundary text}) 
    
    + Headers
    
            Acccept: application/vnd.agility.api.v3+json;
    + Body
    
            --{unique boundary text}
            Content-Disposition: form-data; name="attachmentData"
            Content-Type: application/json
            
            {
                "createDate": "2018-06-15T10:00:00",
                "description": "user text",
                "fileName": "filename.jpg"
            }
            
            --{unique boundary text}
            Content-Disposition: form-data; name="attachmentFile"
            Content-Type: image/jpeg
            Content-Transfer-Encoding: base64
            Content-Size: 1000
    
            SDFKJHWEFKJ;SDC,NSA.,VJNA;DSFJKAJKGFSDVFKDS;FGJKLHSW;GAS;DJKFHKSAJDGHKSAJDHGFKSAJDHGSAJDFKSAJDF
            --{unique boundary text}--
            
+ Response 200 (application/vnd.agility.api.v3+json)

    + Body

            {
                "id": "123"
            }
            
## Create a Helpdesk Request attachment [/helpdesk-requests/:helpDeskRequestCode/attachments/create]

### /helpdesk-requests/:helpDeskRequestCode/attachments/create [POST]    

+ Request V1 (multipart/form-data; boundary={unique boundary text}) 

    + Headers
    
            Acccept: application/vnd.agility.api.v1+json;

    + Body
            
            --{unique boundary text}
            Content-Disposition: form-data; name="attachmentData"
            Content-Type: application/json
            
            {
                "createDate": "2018-06-15T10:00:00",
                "description": "user text",
                "fileName": "filename.jpg"
            }
            
            --{unique boundary text}
            Content-Disposition: form-data; name="attachmentFile"
            Content-Type: image/jpeg
            Content-Transfer-Encoding: base64
            Content-Size: 1000
    
            SDFKJHWEFKJ;SDC,NSA.,VJNA;DSFJKAJKGFSDVFKDS;FGJKLHSW;GAS;DJKFHKSAJDGHKSAJDHGFKSAJDHGSAJDFKSAJDF
            --{unique boundary text}--
            
+ Response 200 (application/json)

    + Body

            {
                "id": "123"
            }

# Group Inventory

##Available Items List  [/inventory/available-items/list{?code,storeid}]

### /inventory/available-items/list{?code,storeid} [GET]

+ Parameters

    + code:"abc" (required,string) - item code/description filter

    + storeid:"123" (optional,array[string]) - list of store ids to filter on

+ Response 200 (application/vnd.agility.api.v5+json)

    + Body

            [
                {
                    "id": "123412",
                    "item": {
                        "id": "123412",
                        "code": "ASD233",
                        "description": "Some item description",
                        "unitOfMeasure": {
                            "id": "12342",
                            "code": "uom code"
                        }
                    },
                    "bin": {
                        "id": "12312412",
                        "code": "bin code",
                        "store": {
                            "id": "12345",
                            "code": "store code"
                        }
                    },
                    "availableQuantity":  1234.234
                }
            ]

## Items List  [/inventory/items/list{?code,storeid}]

### /inventory/items/list{?code,storeid} [GET]

+ Parameters

    + code:"abc" (required,string) - item code/description filter

    + storeid:"123" (optional,array[string]) - list of store ids to filter on

+ Response 200 (application/vnd.agility.api.v5+json)

    + Body

            [
                {
                    "id": "123412",
                    "item": {
                        "id": "123412",
                        "code": "ASD233",
                        "description": "Some item description",
                        "unitOfMeasure": {
                            "id": "12342",
                            "code": "uom code"
                        }
                    },
                    "bin": {
                        "id": "12312412",
                        "code": "bin code",
                        "store": {
                            "id": "12345",
                            "code": "store code"
                        }
                    },
                    "availableQuantity":  1234.234
                }
            ]

## Bin's Items List  [/inventory/bins/items/list{?code,storeid}]

### /inventory/bins/available-items/list{?code,storeid} [GET]

+ Parameters

    + code:"abc" (required,string) - bin location filter

    + storeid:"123" (optional,array[string]) - list of store ids to filter on

+ Response 200 (application/vnd.agility.api.v5+json)

    + Body

            [
                {
                    "id": "123412",
                    "item": {
                        "id": "123412",
                        "code": "ASD233",
                        "description": "Some item description",
                        "unitOfMeasure": {
                            "id": "12342",
                            "code": "uom code"
                        }
                    },
                    "bin": {
                        "id": "12312412",
                        "code": "bin code",
                        "store": {
                            "id": "12345",
                            "code": "store code"
                        }
                    },
                    "availableQuantity": 1234.234
                }
            ]

        
## Stores List [/inventory/stores/list]

### /inventory/stores/list [GET]

+ Response 200 (application/vnd.agility.api.v5+json)

    + Body

            [
                {
                    "id": "123412",
                    "code": "ASD233"
                }
            ]
            
# Group Standard Jobs

## Standard Jobs List [/standard-jobs/list?descriptionFilter={descriptionFilter}&skip={skip}&take={take}]

### /standard-jobs/list [GET]
+ Parameters

    + descriptionFilter:"abc" (string) - standard job description part
    + skip: 0 (integer) - skip n records
    + take: 50 (integer) - take n records

+ Response 200 (application/json)

        [
            {
                "id": "123456",
                "code": "CODE-123",
                "description": "Vehicle check 1m",
                "jobType": {
                    "id": "12341",
                    "description": "Break"
                },
                "priority": {
                    "id": "123124",
                    "description": "Normal"
                },
                "mainCraft":  {
                    "id": "213141",
                    "description": "Engineer"
                },
                "multiCraftJob": "false",
                "scheduleToSelfAllowed": "true"
            },
            {
                "id": "2-123456",
                "code": "CODE-23",
                "description": "PlantStandra check 1m",
                "jobType": {
                    "id": "12341",
                    "description": "Break"
                },
                "priority": {
                    "id": "123124",
                    "description": "Normal"
                },
                "mainCraft":  {
                    "id": "213141",
                    "description": "Engineer"
                },
                "multiCraftJob": "true",
                "scheduleToSelfAllowed": "false"
            }
        ]
        
## Create a job [/standard-jobs/:id/create-job]

### /standard-jobs/:id/create-job [POST]

+ Request (application/json)

    + Body
    
            {
                "referenceId": "030B4A82-1B7C-11CF-9D53-00AA003C9CB6",
                "assetCode": "AC1",
                "costCodeId": "123",
                "createDate": "2018-06-15T10:00:00",
                "description": "",
                "assignToSelf": true
            }

+ Response 200 (application/vnd.agility.api.v8+json)

        {
            "jobCode": ""
        }
        
## Create a follow on job [/standard-jobs/:id/create-follow-on]
### /standard-jobs/:id/create-follow-on [POST]

+ Request (application/json)

    + Body
    
            {
                "referenceId": "030B4A82-1B7C-11CF-9D53-00AA003C9CB6",
                "jobId" : "1234",
                "assetCode": "AC1",
                "costCodeId": "123",
                "createDate": "2018-06-15T10:00:00",
                "description": "",
                "assignToSelf": true
            }

+ Response 200 (application/vnd.agility.api.v8+json)

        {
            "jobCode": ""
        }ever